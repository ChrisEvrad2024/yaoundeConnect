# ====================================================================
# üß™ TEST COMPLET: WORKFLOW POI avec APPROBATION
# ====================================================================
# Test du workflow complet : Inscription ‚Üí Cr√©ation POI ‚Üí Approbation
# Utilisez avec VS Code REST Client extension ou Postman

# Variables globales
@baseUrl = http://localhost:9999
@superAdminEmail = chrisomgba04@gmail.com
@superAdminPassword = passWord123!

# Tokens √† mettre √† jour apr√®s chaque connexion
@adminToken =eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9.eyJpZCI6MzcsImVtYWlsIjoiY2hyaXNvbWdiYTA0QGdtYWlsLmNvbSIsInJvbGUiOiJzdXBlcmFkbWluIiwiaWF0IjoxNzUzNjUzNjkwLCJleHAiOjE3NTQyNTg0OTB9.v4hSiHLlNEuDrqMgYBVZTfOdjBRA5ZGyfVyT7sUZkIE
@collecteurToken =eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9.eyJpZCI6MzgsImVtYWlsIjoiaG90ZWxkZXZpbGxlMDVAZ21haWwuY29tIiwicm9sZSI6ImNvbGxlY3RldXIiLCJpYXQiOjE3NTM2NTA0NDYsImV4cCI6MTc1NDI1NTI0Nn0.8Bve56dXFvFzncdnQqNzUcMiDaSOzIHet4jWefWiIHo
@poiId =40

# ====================================================================
# üè• 1. V√âRIFICATIONS INITIALES
# ====================================================================

### 1.1 Test de connectivit√©
GET {{baseUrl}}/health

### 1.2 Test route racine
GET {{baseUrl}}/

### 1.3 V√©rifier que l'API fonctionne
GET {{baseUrl}}/api/auth/me
# Cette requ√™te doit √©chouer sans token (normal)

# ====================================================================
# üëë 2. CONNEXION ADMINISTRATEUR (pour validation finale)
# ====================================================================

### 2.1 Connexion Super Admin
POST {{baseUrl}}/api/auth/login
Content-Type: application/json

{
  "email": "chrisomgba04@gmail.com",
  "password": "passWord123!"
}

# üìù COPIEZ LE TOKEN DE LA R√âPONSE CI-DESSUS DANS @adminToken

### 2.2 V√©rifier le profil admin (optionnel)
GET {{baseUrl}}/api/auth/me
Authorization: Bearer {{adminToken}}

# ====================================================================
# üìù 3. CR√âATION UTILISATEUR COLLECTEUR
# ====================================================================

### 3.1 Inscription nouveau collecteur
POST {{baseUrl}}/api/auth/register
Content-Type: application/json

{
  "name": "TestTest",
  "email": "hoteldeville05@gmail.com",
  "password": "CollecteurTest123!",
  "role": "collecteur"
}

### 2.1 Connexion Super Admin
POST {{baseUrl}}/api/auth/login
Content-Type: application/json

{
  "email": "hoteldeville05@gmail.com",
  "password": "CollecteurTest123!"
}

### 3.2 V√©rification email (SIMUL√â - copiez le token depuis la r√©ponse d'inscription)
# GET {{baseUrl}}/api/auth/verify-email?token=COPIEZ_LE_TOKEN_ICI

# ‚ö†Ô∏è IMPORTANT: Copiez le dev_verification_token de la r√©ponse ci-dessus
# et remplacez TOKEN_DE_VERIFICATION dans la ligne suivante
GET {{baseUrl}}/api/auth/verify-email?token=TOKEN_DE_VERIFICATION

# ====================================================================
# üîê 4. CONNEXION COLLECTEUR
# ====================================================================

### 4.1 Connexion du collecteur (apr√®s v√©rification email)
POST {{baseUrl}}/api/auth/logout
Content-Type: application/json

{
  "email": "hoteldeville05@gmail.com",
  "password": "CollecteurTest123!"
}

# üìù COPIEZ LE TOKEN DE LA R√âPONSE CI-DESSUS DANS @collecteurToken

### 4.2 V√©rifier le profil collecteur
GET {{baseUrl}}/api/auth/me
Authorization: Bearer {{collecteurToken}}

# ====================================================================
# üèóÔ∏è 5. CR√âATION POI PAR LE COLLECTEUR
# ====================================================================

### 5.1 Cr√©er un POI (devrait √™tre en statut "pending")
POST {{baseUrl}}/api/poi
Authorization: Bearer {{collecteurToken}}
Content-Type: application/json

{
  "name": "Le privilege",
  "description": "Creation du POI le privilege",
  "adress": "Odza Commissariat, Yaound√©",
  "latitude": 3.9480,
  "longitude": 11.6521,
  "quartier_id": 22,
  "category_id": 1,
  "is_restaurant": 1,
  "is_booking": 0,
  "is_transport": 1,
  "is_stadium": 0
}

# üìù COPIEZ L'ID DU POI DE LA R√âPONSE CI-DESSUS DANS @poiId
### 5.2 V√©rifier le POI cr√©√© (d√©tails complets)
GET {{baseUrl}}/api/poi/{{poiId}}
Authorization: Bearer {{collecteurToken}}

### 5.3 Rechercher le POI dans la liste publique (ne devrait PAS appara√Ætre)
GET {{baseUrl}}/api/poi?q=Maison des secrets

# ====================================================================
# üîç 6. V√âRIFICATIONS INTERM√âDIAIRES
# ====================================================================

### 6.1 Lister les POI en attente (admin uniquement)
GET {{baseUrl}}/api/moderation/pending?limit=10
Authorization: Bearer {{adminToken}}

### 6.2 V√©rifier les stats de mod√©ration
GET {{baseUrl}}/api/moderation/stats
Authorization: Bearer {{adminToken}}

### 6.3 Historique de mod√©ration du POI (vide pour l'instant)
GET {{baseUrl}}/api/moderation/history/{{poiId}}
Authorization: Bearer {{adminToken}}

# ====================================================================
# ‚úÖ 7. APPROBATION DU POI PAR L'ADMIN
# ====================================================================

### 7.1 Approuver le POI
POST {{baseUrl}}/api/moderation/poi/{{poiId}}/approve
Authorization: Bearer {{adminToken}}
Content-Type: application/json

{
  "comments": "POI valid√© apr√®s v√©rification. L'H√¥tel de Ville est bien situ√© √† cette adresse et constitue un point d'int√©r√™t important pour les visiteurs de Yaound√©."
}

### 7.2 V√©rifier le POI apr√®s approbation
GET {{baseUrl}}/api/poi/{{poiId}}
Authorization: Bearer {{collecteurToken}}

### 7.3 Rechercher le POI dans la liste publique (devrait maintenant appara√Ætre)
GET {{baseUrl}}/api/poi?q=Maison des secrets

### 7.4 V√©rifier l'historique de mod√©ration (devrait contenir l'approbation)
GET {{baseUrl}}/api/moderation/history/{{poiId}}
Authorization: Bearer {{adminToken}}

# ====================================================================
# üéØ 8. TESTS SUPPL√âMENTAIRES (OPTIONNELS)
# ====================================================================

### 8.1 Stats du POI apr√®s approbation
GET {{baseUrl}}/api/poi/{{poiId}}/stats

### 8.2 POI √† proximit√© de l'H√¥tel de Ville
GET {{baseUrl}}/api/poi/nearby?latitude=3.8480&longitude=11.5021&radius=2&limit=10

### 8.3 Cr√©er un autre POI pour test de rejet (optionnel)
POST {{baseUrl}}/api/poi
Authorization: Bearer {{collecteurToken}}
Content-Type: application/json

{
  "name": "POI Test pour Rejet",
  "description": "Ce POI sera cr√©√© pour tester le processus de rejet.",
  "adress": "Adresse test, Yaound√©",
  "latitude": 3.8500,
  "longitude": 11.5030,
  "quartier_id": 1,
  "category_id": 1,
  "is_restaurant": 0,
  "is_booking": 0
}

### 8.4 Rejeter le POI test (remplacez POI_ID_2 par l'ID du POI cr√©√© ci-dessus)
POST {{baseUrl}}/api/moderation/poi/40/reject
Authorization: Bearer {{adminToken}}
Content-Type: application/json

{
  "reason": "Ce POI ne correspond pas aux crit√®res de qualit√© requis. Description trop vague et localisation impr√©cise."
}

# ====================================================================
# üîÑ 9. TEST DE R√âAPPROBATION (si rejet effectu√©)
# ====================================================================

### 9.1 R√©approuver un POI rejet√© (si test de rejet effectu√©)
POST {{baseUrl}}/api/moderation/poi/40/reapprove
Authorization: Bearer {{adminToken}}
Content-Type: application/json

{
  "comments": "Apr√®s r√©vision, ce POI peut √™tre accept√© avec les modifications apport√©es."
}

# ====================================================================
# üìä 10. V√âRIFICATIONS FINALES
# ====================================================================

### 10.1 Stats finales de mod√©ration
GET {{baseUrl}}/api/moderation/stats
Authorization: Bearer {{adminToken}}

### 10.2 Liste compl√®te des POI approuv√©s
GET {{baseUrl}}/api/poi?status=approved&limit=20

### 10.3 Profil final du collecteur
GET {{baseUrl}}/api/auth/me
Authorization: Bearer {{collecteurToken}}

### 10.4 D√©connexion collecteur
POST {{baseUrl}}/api/auth/logout
Authorization: Bearer {{collecteurToken}}

### 10.5 D√©connexion admin
POST {{baseUrl}}/api/auth/logout
Authorization: Bearer {{adminToken}}

# ====================================================================
# üìù R√âSUM√â DU WORKFLOW TEST√â
# ====================================================================

# ‚úÖ √âTAPES COMPLET√âES :
# 
# 1. üè• V√©rification sant√© serveur
# 2. üëë Connexion administrateur
# 3. üìù Inscription collecteur "TestTest"
# 4. üìß V√©rification email collecteur
# 5. üîê Connexion collecteur
# 6. üèóÔ∏è Cr√©ation POI (statut "pending")
# 7. üîç V√©rification POI non visible publiquement
# 8. ‚úÖ Approbation POI par admin
# 9. üéØ V√©rification POI maintenant visible
# 10. üìä Historique et stats de mod√©ration
#
# üéâ WORKFLOW COMPLET VALID√â !
#
# R√âSULTATS ATTENDUS :
# - POI cr√©√© par collecteur ‚Üí statut "pending"
# - POI non visible dans recherche publique avant approbation
# - Notification envoy√©e aux mod√©rateurs (en mode dev: simulation)
# - Approbation par admin ‚Üí statut "approved"
# - POI maintenant visible publiquement
# - Historique de mod√©ration enregistr√©
#
# üîß POUR R√âP√âTER LE TEST :
# 1. Changez l'email du collecteur
# 2. Changez le nom du POI
# 3. Mettez √† jour les variables @collecteurToken et @poiId
# 4. Ex√©cutez dans l'ordre

# ====================================================================
# üö® NOTES IMPORTANTES
# ====================================================================

# üìå TOKENS :
# - Copiez TOUJOURS les tokens depuis les r√©ponses de connexion
# - Remplacez les variables @adminToken et @collecteurToken
# - Les tokens expirent apr√®s 7 jours

# üìå V√âRIFICATION EMAIL :
# - En mode d√©veloppement, le token est dans dev_verification_token
# - Copiez ce token dans l'URL de v√©rification
# - En production, l'utilisateur clique sur le lien re√ßu par email

# üìå IDs DE POI :
# - Copiez l'ID du POI depuis la r√©ponse de cr√©ation
# - Remplacez {{poiId}} par l'ID r√©el pour les tests suivants

# üìå STATUTS POI :
# - "pending" = en attente de mod√©ration
# - "approved" = approuv√© et visible publiquement
# - "rejected" = rejet√© par les mod√©rateurs

# üìå R√îLES ET PERMISSIONS :
# - "membre" et "collecteur" peuvent cr√©er des POI
# - "moderateur", "admin", "superadmin" peuvent approuver/rejeter
# - Auto-approbation pour mod√©rateurs+ lors de cr√©ation

### Test route quartiers
GET {{baseUrl}}/api/quartiers

### Test route quartiers avec filtres
GET {{baseUrl}}/api/quartiers?limit=10

### Test quartier par ID
GET {{baseUrl}}/api/quartiers/1

### Test route cat√©gories
GET {{baseUrl}}/api/categories

### Test cat√©gories avec filtres
GET {{baseUrl}}/api/categories?langue=fr&limit=20

### Test cat√©gorie par ID  
GET {{baseUrl}}/api/categories/1